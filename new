import numpy as np
import time
import matplotlib.pyplot as plt
from numpy import random
from numpy.core.fromnumeric import shape
import seaborn as sns
import scipy.stats as stat

# generate some data of guassian distribution
sigma= np.array([[0.93295033],[7.57683839]] )
lamda= np.array([[0.5808444],[0.4191556]] )
mu= np.array([[5],[1]])
mu1,sigma1= mu[0,0],sigma[0,0]
size1=(int(lamda[0,0]*150),1) # lamda1= 0.33 since i used 50/150


mu2, sigma2= mu[1,0],sigma[1,0]
size2=(int(lamda[1,0]*150),1) #  lamda2= 0.67 

data1= np.random.normal(mu1,sigma1,size=size1)
data2= np.random.normal(mu2,sigma2,size=size2)


data3 = np.append(data1,data2,axis=0)


sns.kdeplot(data=data3)
# sns.histplot(data= data3, bins=30,kde=True)
plt.show()


# em algorithm

#initialize things
# mu= np.random.uniform(low=2,high=3,size=(2,1))
# sigma=np.random.uniform(low=2,high=3,size=(2,1))
# lamda= np.random.rand(2,1)
# lamda[1,0]=1-lamda[0,0]
n= data3.shape[0]
mu=np.array([[2 ],[3]])
sigma=np.array( [[1], [0.5]])
lamda=np.array([[0.30] ,[0.7]])
gamma = np.zeros(shape=(data3.shape[0],2))
gamma1= np.zeros(shape=(data3.shape[0],1))
gamma2 = np.zeros(shape=(data3.shape[0],1))

gamma1=lamda[0,0]*(stat.norm(mu[0,0],sigma[0,0]).pdf(data3))
gamma2= (lamda[1,0]*stat.norm(mu[1,0],sigma[1,0]).pdf(data3))

gamma= np.append(gamma1/(gamma1+gamma2), gamma2/(gamma1+gamma2),axis=1)
print("gamma [0,0]")
print(gamma1[0,0]/(gamma1[0,0]+gamma2[0,0]),gamma[0,0])
# gamma= gamma.reshape((150,2))
print("sjoije")
print(mu,sigma,lamda,shape(gamma))



# updating the parameters
for _ in range(500):
    gammasum= np.sum(gamma,axis=0,keepdims=True)
    # print(f"gammasum={shape(gammasum)}")
    # print(f"gamma ={shape(gamma)} ")
    print(gammasum)
    # print(f"mu size ={shape(mu)} ")
    

    
    
    mu[0,0] =float(np.sum( np.multiply(gamma[:,0].reshape(150,1),data3),axis=0))/float(gammasum[0,0])
    mu[1,0] =np.sum( np.multiply(gamma[:,1].reshape(150,1),data3),axis=0)/gammasum[0,1]
    # print(f"mu={shape(mu)}")

    lamda= np.transpose((1/n)*(gammasum))
    print(lamda)
    # print(f"lamda= {shape(lamda)}")
    # print(f"sigma= {shape(sigma)}")
    diff= (data3-mu[0,0])**2
    
    sigma[0,0] = np.sum(np.multiply(gamma[:,0].reshape(150,1),(data3-mu[0,0])),axis=0,keepdims=True)/gammasum[0,0]
    print(sigma1)
    sigma[1,0] = np.sum(np.multiply(gamma[:,1].reshape(150,1),(data3-mu[1,0])**2),axis=0,keepdims=True)/gammasum[0,1]

    gamma1= (lamda[0,0]*stat.norm(mu[0,0],sigma[0,0]).pdf(data3))
    gamma2= (lamda[1,0]*stat.norm(mu[1,0],sigma[1,0]).pdf(data3))
    gamma= np.append(gamma1/(gamma1+gamma2), gamma2/(gamma1+gamma2),axis=1)
    if(_%10==0):
        print(f"sigma= {sigma} \nlamda= {lamda} \nmu= {mu} ")
        time.sleep(1)
print(f"\n\n\nsigma= {sigma} lamda= {lamda} mu= {mu} \n\n\n")

